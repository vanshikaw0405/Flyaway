/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.62
 * Generated at: 2022-04-23 10:40:35 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Connection;

public final class BookingDetails_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.sql.SQLException");
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("java.sql.PreparedStatement");
    _jspx_imports_classes.add("java.sql.DriverManager");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"ISO-8859-1\">\r\n");
      out.write("<title>Booking</title>\r\n");
      out.write("<style>\r\n");
      out.write("body{\r\n");
      out.write("margin : 0;\r\n");
      out.write("padding : 0;\r\n");
      out.write("}\r\n");
      out.write(".head{\r\n");
      out.write("background-color : #0000FF;\r\n");
      out.write("color : #fff;\r\n");
      out.write("height : 50px;\r\n");
      out.write("}\r\n");
      out.write("h1{\r\n");
      out.write("	margin: auto;\r\n");
      out.write("	font-family : \"Times New Roman\", Times, serif;\r\n");
      out.write("	text-align : center;\r\n");
      out.write("}\r\n");
      out.write("span{\r\n");
      out.write("	margin: auto;\r\n");
      out.write("	font-family : \"Times New Roman\", Times, serif;\r\n");
      out.write("	text-align : center;\r\n");
      out.write("	font-size : 35px;\r\n");
      out.write("}\r\n");
      out.write("button{\r\n");
      out.write("	margin : 10px;\r\n");
      out.write("  	border-radius: 4px; \r\n");
      out.write("	border:none;\r\n");
      out.write("	height: 30px;\r\n");
      out.write("	display : inline-block;\r\n");
      out.write("	font-size : 15px;\r\n");
      out.write("	font-width : bold;\r\n");
      out.write("	background-color: red;\r\n");
      out.write("}\r\n");
      out.write("a{\r\n");
      out.write("	text-decoration : none;\r\n");
      out.write("	color : #fff;\r\n");
      out.write("}\r\n");
      out.write(".details-box{\r\n");
      out.write("	margin :auto;\r\n");
      out.write("	margin-top : 40px;\r\n");
      out.write("	width : 500px;\r\n");
      out.write("	border : 1px solid #ccc;\r\n");
      out.write("	box-shadow : 0 8px 12px 0px rgba(0,0,0,0.3);\r\n");
      out.write("	positive : absolute;\r\n");
      out.write("}\r\n");
      out.write("table {\r\n");
      out.write("  border-collapse: collapse;\r\n");
      out.write("  width: 60%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("th{\r\n");
      out.write("  text-align: left;\r\n");
      out.write("  padding: 8px;\r\n");
      out.write("}\r\n");
      out.write("td{\r\n");
      out.write("  text-align: right;\r\n");
      out.write("  padding: 8px;\r\n");
      out.write("}\r\n");
      out.write("tr:nth-child(even){border-bottom : 1px solid #ccc;}\r\n");
      out.write("tr:nth-child(odd){border-bottom : 1px solid #ccc;}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<center>\r\n");
      out.write("<div class=\"head\">\r\n");
      out.write("	<span>FlyAway</span>\r\n");
      out.write("	<button style=\"float:right;\"><a href=\"logout\">Log out</a></button>\r\n");
      out.write("</div>\r\n");
      out.write("<div class=\"details-box\">\r\n");

Object s=session.getAttribute("flightno");


/*String url="jdbc:mysql://localhost:3306/flyaway";
String  username="root";
String password="root";*/
try {
	Class.forName("com.mysql.jdbc.Driver");
	Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/flyaway", "root", "root");

	
	//String sqlQuery="select * from flightdetails where flightno=?";
	  PreparedStatement pstmt=connection.prepareStatement("select * from flightdetails where flightno=?");
	  
	//  pstmt.setString(1, no);
	pstmt.setObject(1, s);
	//  out.println(no);
	  
	  ResultSet rs=pstmt.executeQuery();
	  while(rs.next()){
		/*   out.println("Flightno:"+rs.getString("flightno"));
		  out.println("Origin is:"+rs.getString("origin"));
		  out.println("Destination is:"+rs.getString("destination"));
		  out.println("Departure time is:"+rs.getString("departure_time"));
		  out.println("Arrival time is:"+rs.getString("arrival_time"));
		  out.println("Fare is:"+rs.getString("fare"));   */
		  
		  
      out.write("\r\n");
      out.write("		  \r\n");
      out.write("		 <div>\r\n");
      out.write("		  <h2><u>Flight Booking Details</u></h2>\r\n");
      out.write("		  <table>\r\n");
      out.write("		  <tr><th align=\"right\">Arline Name : </th><td>");
      out.print(rs.getString("airline_name"));
      out.write("</td></tr>\r\n");
      out.write("		  <tr><th align=\"right\">Flight No. : </th><td>");
      out.print(rs.getString("flightno"));
      out.write("</td></tr>\r\n");
      out.write("		  <tr><th align=\"right\">Origin : </th><td>");
      out.print(rs.getString("origin"));
      out.write("</td></tr>\r\n");
      out.write("		  <tr><th align=\"right\">Destination : </th><td>");
      out.print(rs.getString("destination"));
      out.write("</td></tr>\r\n");
      out.write("		  <tr><th align=\"right\">Departure Time : </th><td>");
      out.print(rs.getString("departure_time"));
      out.write("</td></tr>\r\n");
      out.write("		  <tr><th align=\"right\">Arrival Time : </th><td>");
      out.print(rs.getString("arrival_time"));
      out.write("</td></tr>\r\n");
      out.write("		  <tr><th align=\"right\">Fare : </th><td>");
      out.print(rs.getString("fare"));
      out.write("</td></tr>\r\n");
      out.write("		   <tr><th align=\"right\">Price : </th><td>");
      out.print(rs.getString("ticket_price"));
      out.write("</td></tr>\r\n");
      out.write("		  </table>\r\n");
      out.write("		 </div>\r\n");
      out.write("\r\n");
      out.write("	");
   }

} catch (SQLException e) {
	// TODO Auto-generated catch block
	e.printStackTrace();
	System.out.println("Some Error occured :"+ e);
}

      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("</center>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
